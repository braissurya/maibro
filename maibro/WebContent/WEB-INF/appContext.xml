<?xml version="1.0" encoding="UTF-8"?>
<beans	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:task="http://www.springframework.org/schema/task"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- file properties (agar bisa digunakan di bean2) -->
	<util:properties id="props" location="classpath:app.properties" />

	<!-- Property placeholder (agar bisa digunakan dalam bentuk ${nama} di semua spring xml). Bisa lebih dari 1 properties -->
 	<context:property-placeholder location="classpath:*.properties"/>

	<!-- enable spring task scheduler (lihat com.maibro.utils.MainScheduler) -->
<!-- 	<task:annotation-driven /> -->

	<!-- exception handling, bila terjadi error -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver" p:order="1" /> <!-- pertama, cek dulu apakah ada @ExceptionHandler di masing2 controller -->
	<bean class="com.maibro.utils.MainExceptionResolver" p:order="2" /> <!-- kedua, baru gunakan exception handler -->

	<!-- auto-discover semua annotated component (scheduler, emailer, dll) lalu daftarkan semua sebagai beans -->
	<context:component-scan base-package="com.maibro.utils" />

	<!-- async task executor, bila tidak ada ini, maka @Async (dalam hal ini mailSender dibawah) tidak akan jalan secara asynchronous -->
	<task:annotation-driven executor="myExecutor" />
	<task:executor id="myExecutor" pool-size="2"/>
   
	<!-- mailSender (digunakan oleh class id.co.ajsmsig.eagency.utils.Emailer) -->
	<bean name="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"
		p:host="${email.host}"
		p:port="${email.port}"
		p:protocol="${email.protocol}"
		p:username="${email.username}"
		p:password="${email.password}" 
		p:javaMailProperties-ref="mailProperties" />
	
	<util:properties id="mailProperties">
        <prop key="mail.smtp.auth">${email.auth}</prop>
        <prop key="mail.smtp.starttls.enable">${email.starttls}</prop>
        <prop key="mail.smtp.quitwait">${email.quitwait}</prop>
	</util:properties>

	<!-- initOnStartup (bean buatan sendiri untuk beberapa function yg mau dijalankan diawal, contoh: report compiler) -->
	<bean name="initOnStartup" class="com.maibro.utils.InitOnStartup">
		<constructor-arg name="props" ref="props" />
		<constructor-arg name="servletContext" ref="servletContext" />
	</bean>
	
	<!-- message source, untuk fitur i18n dan error messages -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource" p:basename="/WEB-INF/messages" />
	
	
</beans>